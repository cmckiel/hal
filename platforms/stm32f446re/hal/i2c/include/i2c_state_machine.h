#ifndef _I2C_STATE_MACHINE_H
#define _I2C_STATE_MACHINE_H

#include <stdint.h>
#include <stdbool.h>

typedef enum {
    _I2C_OP_MIN = 0,
    I2C_OP_INITIATE_TRANSFER = _I2C_OP_MIN,
    I2C_OP_CONCLUDE_TRANSFER,
    I2C_OP_SEND_ADDRESS,
    I2C_OP_SEND_DATA,
    I2C_OP_ACK_FAILURE,
    I2C_OP_FAULT,
    I2C_OP_NO_OP,
    _I2C_OP_MAX,
} i2c_operation_t;

typedef enum {
    _I2C_EVENT_MIN = 0,
    I2C_EVENT_START_CONDITION_REQUEST = _I2C_EVENT_MIN,
    I2C_EVENT_START_CONDITION_CONFIRMED,
    I2C_EVENT_ADDRESS_ACKNOWLEDGED,
    I2C_EVENT_TXE,
    I2C_EVENT_ACK_FAILURE,
    I2C_EVENT_TRANSFER_COMPLETE,
    I2C_EVENT_RESET,
    I2C_EVENT_NO_OP,
    I2C_EVENT_FAULT,
    _I2C_EVENT_MAX,
} i2c_event_t;

typedef enum {
    _I2C_STATE_MIN = 0,
    I2C_STATE_TRANSMISSION_NOT_STARTED = _I2C_STATE_MIN,
    I2C_STATE_START_CONDITION_REQUESTED,
    I2C_STATE_SENDING_ADDRESS,
    I2C_STATE_ADDRESS_ACKNOWLEDGED,
    I2C_STATE_TRANSFERRING_DATA,
    I2C_STATE_TRANSFER_COMPLETE,
    I2C_STATE_ACK_FAILURE,
    I2C_STATE_FAULT,
    _I2C_STATE_MAX,
} i2c_state_t;

i2c_operation_t i2c_state_machine_get_operation(i2c_event_t event);

#endif /* _I2C_STATE_MACHINE_H */
